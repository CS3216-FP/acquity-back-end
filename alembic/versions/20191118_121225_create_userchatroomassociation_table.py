"""Create UserChatRoomAssociation table

Revision ID: 9f8070535dd6
Revises: 047af5b48b24
Create Date: 2019-11-18 12:12:25.630903

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "9f8070535dd6"
down_revision = "047af5b48b24"
branch_labels = None
depends_on = None


# TODO: write data migration
def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_chat_room_association",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("user_id", postgresql.UUID(), nullable=False),
        sa.Column("chat_room_id", postgresql.UUID(), nullable=False),
        sa.Column("role", sa.Enum("BUYER", "SELLER", name="user_type"), nullable=False),
        sa.Column("is_revealed", sa.Boolean(), server_default="f", nullable=False),
        sa.Column("is_archived", sa.Boolean(), server_default="f", nullable=False),
        sa.Column("last_read_id", postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["chat_room_id"], ["chat_rooms.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["last_read_id"], ["chats.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "chat_room_id"),
    )
    op.drop_table("archived_chat_rooms")
    op.drop_constraint(
        "chat_rooms_seller_id_buyer_id_key", "chat_rooms", type_="unique"
    )
    op.drop_constraint("chat_rooms_seller_id_fkey", "chat_rooms", type_="foreignkey")
    op.drop_constraint("chat_rooms_buyer_id_fkey", "chat_rooms", type_="foreignkey")
    op.drop_column("chat_rooms", "seller_id")
    op.drop_column("chat_rooms", "is_buyer_revealed")
    op.drop_column("chat_rooms", "is_seller_revealed")
    op.drop_column("chat_rooms", "buyer_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "chat_rooms",
        sa.Column("buyer_id", postgresql.UUID(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "chat_rooms",
        sa.Column(
            "is_seller_revealed",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "chat_rooms",
        sa.Column(
            "is_buyer_revealed",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "chat_rooms",
        sa.Column("seller_id", postgresql.UUID(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        "chat_rooms_buyer_id_fkey",
        "chat_rooms",
        "users",
        ["buyer_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "chat_rooms_seller_id_fkey",
        "chat_rooms",
        "users",
        ["seller_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_unique_constraint(
        "chat_rooms_seller_id_buyer_id_key", "chat_rooms", ["seller_id", "buyer_id"]
    )
    op.create_table(
        "archived_chat_rooms",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "chat_room_id", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["chat_room_id"],
            ["chat_rooms.id"],
            name="archived_chat_rooms_chat_room_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="archived_chat_rooms_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="archived_chat_rooms_pkey"),
    )
    op.drop_table("user_chat_room_association")
    # ### end Alembic commands ###
